/*Complete the code here.
Node is as follows:
struct Node
{
  int data;
  Node* left;
  Node* right;
};
*/
class Solution{
    public:
    
    int findPosition(int in[],int element, int n){
        for(int i=0;i<n;i++){
            if(in[i] == element){
                return i;
            }
        }
        return -1;
    }
    
    Node* solve(int in[], int pre[], int &PreOrderIndex, int inorderStart, int inorderEnd, int n){
        if(PreOrderIndex>=n || inorderStart>inorderEnd){
            return NULL;
        }
        
        int element = pre[PreOrderIndex++];
        Node* root = new Node(element);
        int position = findPosition(in,element,n);
        
        //recursive calls
        root->left = solve(in,pre,PreOrderIndex,inorderStart,position-1,n);
        root->right = solve(in,pre,PreOrderIndex,position+1,inorderEnd,n);
        
        return root;
        
    }
    
    Node* buildTree(int in[],int pre[], int n)
    {
        int PreOrderIndex = 0;
        Node* ans = solve(in,pre,PreOrderIndex,0,n-1,n);
        return ans;
    }
};
