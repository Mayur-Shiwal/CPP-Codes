class Solution{
  public:
    // root : the root Node of the given BST
    // target : the target sum
    
    void inOrder(Node* root, vector<int> &v){
        if(root == NULL){
            return;
        }
        inOrder(root->left,v);
        v.push_back(root->data);
        inOrder(root->right,v);
    }
    
    int isPairPresent(struct Node *root, int target)
    {
        vector<int> v;
        inOrder(root,v);
        int i = 0, j = v.size()-1;
        while(i<j){
            int sum = v[i] + v[j];
            if(sum == target){
                return 1;
            }
            else if(sum>target){
                j--;
            }
            else{
                i++;
            }
        }
        return 0;
    
    }
};
