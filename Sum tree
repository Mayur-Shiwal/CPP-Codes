/*  Tree node
struct Node
{
    int data;
    Node* left, * right;
}; */

// Should return true if tree is Sum Tree, else false
class Solution
{
    public:
    
    pair<bool,int> isSumTreeFast(Node* root){
        //base case
        if(root == NULL){
            pair<bool,int> p = make_pair(true,0);
            return p;
        }
        if(root->left == NULL && root->right == NULL){
            pair<bool,int> p = make_pair(true,root->data);
            return p;
        }
        pair<bool,int> leftAns = isSumTreeFast(root->left);
        pair<bool,int> rightAns = isSumTreeFast(root->right);
        
        bool left = leftAns.first;
        bool right = rightAns.first;
        
        bool condition = root->data == leftAns.second + rightAns.second;
        pair<bool,int> res;
        if(left && right && condition){
            res.first = true;
            res.second =  2*root->data;
        }
        else{
            res.first = false;
        }
        return res;
    }
    
    bool isSumTree(Node* root)
    {
         return isSumTreeFast(root).first;
    }
};
