#include <bits/stdc++.h> 

// memoization
// int f(int i, vector<int> &heights, vector<int> &dp){
//     if(i == 0) return 0;
//     if(dp[i] != -1) return dp[i];
//     int left = f(i-1, heights, dp) + abs(heights[i] - heights[i-1]);
//     int right = INT_MAX;
//     if(i>1) right = f(i-2, heights, dp) + abs(heights[i] - heights[i-2]);
//     return dp[i] = min(left, right);
// }

int frogJump(int n, vector<int> &heights)
{
//     vector<int> dp(n+1, -1);
//     return f(n-1, heights, dp);
    // tabulaion mathod
    int prev = 0;
    int prev2 = 0;
       
    for(int i=1;i<=n-1;i++){
        int firstStep  = prev + abs(heights[i] - heights[i-1]);
        int secondStep = INT_MAX;
        if(i>1) secondStep = prev2 + abs(heights[i] - heights[i-2]);
        int curri = min(firstStep, secondStep);
        prev2 = prev;
        prev = curri;
    }
    return prev;
}
