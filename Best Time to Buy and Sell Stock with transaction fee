#include <bits/stdc++.h>

int f(int i, int buy, int fee, int n, vector<int> &prices, vector<vector<int>> &dp){
    if(i == n) return 0;
    if(dp[i][buy] != -1) return dp[i][buy];
    if(buy){
        return dp[i][buy] = max(-prices[i] + f(i+1, 0, fee, n, prices, dp), 
                                0 + f(i+1, 1, fee, n, prices, dp));
    }
    else{
        return dp[i][buy] = max(prices[i] - fee + f(i+1, 1, fee, n, prices, dp), 
                                0 + f(i+1, 0, fee, n, prices, dp));
    }
}

int maximumProfit(int n, int fee, vector<int> &prices) {
    // Write your code here.
    vector<vector<int>> dp(n, vector<int>(2, -1));
    return f(0, 1, fee, n, prices, dp);
}
