#include <bits/stdc++.h> 

bool f(int i, int target, vector<int> &arr, vector<vector<int>> &dp){
    if(target == 0) return true;
    if(i == 0) return (arr[0] == target);
    if(dp[i][target] != -1) return dp[i][target];
    bool notTake = f(i-1, target, arr, dp);
    bool take = false;
    if(arr[i] <= target) take = f(i-1, target - arr[i], arr, dp);
    return dp[i][target] = take | notTake;
}

bool subsetSumToK(int n, int k, vector<int> &arr) {
    vector<vector<int>> dp(n, vector<int>(k+1, -1));
    return f(n-1, k, arr, dp);
}
