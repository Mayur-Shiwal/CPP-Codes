void inOrder(Node* root, vector<int> &v){
    if(root == NULL){
        return;
    }
    inOrder(root->left, v);
    v.push_back(root->data);
    inOrder(root->right, v);
}

Node* inOrderToBST(int s, int e, vector<int> v){
    if(s>e){
        return NULL;
    }
    int mid = (s+e)/2;
    Node* root = new Node(v[mid]);
    root->left = inOrderToBST(s,mid-1,v);
    root->right = inOrderToBST(mid+1,e,v);
    return root;
}

// Your are required to complete this function
// function should return root of the modified BST
Node* buildBalancedTree(Node* root)
{
	vector<int> v;
	inOrder(root,v);
	return inOrderToBST(0,v.size()-1,v);
	
}
