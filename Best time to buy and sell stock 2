#include<bits/stdc++.h>
long f(int i, int buy, long *values, int n, vector<vector<long>> &dp){
    if(i == n) return 0;
    long profit = 0;
    if(dp[i][buy] != -1) return dp[i][buy];
    if(buy){
        profit = max(-values[i] + f(i+1, 0, values, n, dp), 0 + f(i+1, 1, values, n, dp));
    }
    else{
        profit = max(values[i] + f(i+1, 1, values, n, dp), 0 + f(i+1, 0, values, n, dp));
    }
    return dp[i][buy] = profit;
}
long getMaximumProfit(long *values, int n)
{
    vector<vector<long>> dp(n, vector<long>(2, -1));
    return f(0, 1, values, n, dp);
//     Write your code here
}
